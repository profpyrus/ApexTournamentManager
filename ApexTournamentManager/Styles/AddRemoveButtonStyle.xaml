<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="Button"
           x:Key="ButtonTheme">

        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">

                            <TextBlock Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       TextAlignment="Center"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="DemiBold"
                                       Foreground="{StaticResource TextColor}"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="{StaticResource Base}"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Border.CornerRadius" Value="10,10,10,10" />
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MenuButtonHover}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MenuButtonHover}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource TextColorDisbaled}"/>
                <Setter Property="Background" Value="{StaticResource BaseDisabled}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style BasedOn="{StaticResource ButtonTheme}"
           TargetType="Button"
           x:Key="AddButtonTheme">
        <Setter Property="Border.CornerRadius" Value="0,0,0,10" />
    </Style>

    <Style BasedOn="{StaticResource ButtonTheme}"
           TargetType="Button"
           x:Key="ResetButtonTheme">
        <Setter Property="Border.CornerRadius" Value="0,0,0,0" />
    </Style>

    <Style BasedOn="{StaticResource ButtonTheme}"
           TargetType="Button"
           x:Key="RemoveButtonTheme">
        <Setter Property="Border.CornerRadius" Value="0,0,10,0" />
    </Style>

    <Style BasedOn="{StaticResource ButtonTheme}"
           TargetType="Button"
           x:Key="DecimateButtonTheme">
        <Setter Property="Border.CornerRadius" Value="10,0,0,10" />
    </Style>

    <Style BasedOn="{StaticResource ButtonTheme}"
           TargetType="Button"
           x:Key="AdditionButtonTheme">
        <Setter Property="Border.CornerRadius" Value="0,10,10,0" />
    </Style>

    <Style BasedOn="{StaticResource ButtonTheme}"
           TargetType="Button"
           x:Key="CloseButtonTheme">
        <Setter Property="Border.CornerRadius" Value="0,12,12,0" />
    </Style>

    <Style BasedOn="{StaticResource ButtonTheme}"
           TargetType="Button"
           x:Key="MinimizeButtonTheme">
        <Setter Property="Border.CornerRadius" Value="0,0,0,0" />
    </Style>

</ResourceDictionary>